[{"/workspace/react-traffic-light/traffic-light/src/reportWebVitals.js":"1","/workspace/react-traffic-light/traffic-light/src/App.js":"2","/workspace/react-traffic-light/traffic-light/src/index.js":"3"},{"size":362,"mtime":1612308824000,"results":"4","hashOfConfig":"5"},{"size":963,"mtime":1612447094267,"results":"6","hashOfConfig":"5"},{"size":500,"mtime":1612308824000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11lyuxo",{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/workspace/react-traffic-light/traffic-light/src/reportWebVitals.js",[],"/workspace/react-traffic-light/traffic-light/src/App.js",["15","16"],"import './App.css';\nimport { Container, Row, Col } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from 'react';\n\nconst Lights = (props) => {\n    const [color, setColor] = useState(true);\n    const [selected, setSelected] = useState(false)\n    const className = (color ? `${props.color}` : \"\" ) + \" light\" + (selected ? \"selected\" : \"\");\n    \n\n\n    return <Row>\n            <Col>\n                <div onClick={() => this.setState(selected ? false : true)} className={className} />\n            </Col>\n        </Row>\n}\n\nconst App = () => {\n    return (\n    <Container>\n        <Row>\n        <Col className=\"trafficTop\" />\n        </Row>\n        <Row>\n            <Container className=\"trafficBody\">\n                <Lights color=\"red\" />\n                <Lights color=\"yellow\" />\n                <Lights color=\"green\" />\n            </Container>\n        \n        </Row>\n    </Container>\n    )\n}\n\nexport default App;\n","/workspace/react-traffic-light/traffic-light/src/index.js",[],{"ruleId":"17","severity":1,"message":"18","line":7,"column":19,"nodeType":"19","messageId":"20","endLine":7,"endColumn":27},{"ruleId":"17","severity":1,"message":"21","line":8,"column":22,"nodeType":"19","messageId":"20","endLine":8,"endColumn":33},"no-unused-vars","'setColor' is assigned a value but never used.","Identifier","unusedVar","'setSelected' is assigned a value but never used."]